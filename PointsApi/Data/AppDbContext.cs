using Microsoft.EntityFrameworkCore;
using PointsApi.Models;

namespace PointsApi.Data
{
    /// <summary>
    /// üóÑÔ∏è AppDbContext - Contexte de base de donn√©es Entity Framework
    /// 
    /// Cette classe fait le lien entre le code C# et la base de donn√©es SQLite
    /// Elle d√©finit quelles tables existent et comment y acc√©der
    /// 
    /// Entity Framework traduit automatiquement :
    /// - _context.Users.Find(id) ‚Üí SELECT * FROM user WHERE id = {id}
    /// - _context.SaveChanges() ‚Üí UPDATE user SET points = {points} WHERE id = {id}
    /// </summary>
    public class AppDbContext : DbContext
    {
        /// <summary>
        /// Constructeur - Injection de d√©pendance
        /// ASP.NET Core nous donne automatiquement les options de connexion
        /// </summary>
        public AppDbContext(DbContextOptions<AppDbContext> options) : base(options) { }
        
        /// <summary>
        /// üë• Users - Table des utilisateurs et leurs points
        /// 
        /// Cette propri√©t√© repr√©sente la table "user" en base de donn√©es
        /// Elle permet d'effectuer des op√©rations CRUD sur les utilisateurs
        /// </summary>
        public DbSet<User> Users { get; set; }
    }
}