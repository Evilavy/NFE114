<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard Admin - AlloParents</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    animation: {
                        'fade-in': 'fadeIn 0.6s ease-out',
                        'slide-in-left': 'slideInLeft 0.8s ease-out',
                        'slide-in-right': 'slideInRight 0.8s ease-out',
                        'pulse-glow': 'pulseGlow 3s ease-in-out infinite',
                        'scale-in': 'scaleIn 0.4s ease-out',
                        'counter-up': 'counterUp 1s ease-out',
                    },
                    keyframes: {
                        fadeIn: {
                            '0%': { opacity: '0', transform: 'scale(0.95)' },
                            '100%': { opacity: '1', transform: 'scale(1)' }
                        },
                        slideInLeft: {
                            '0%': { transform: 'translateX(-30px)', opacity: '0' },
                            '100%': { transform: 'translateX(0)', opacity: '1' }
                        },
                        slideInRight: {
                            '0%': { transform: 'translateX(30px)', opacity: '0' },
                            '100%': { transform: 'translateX(0)', opacity: '1' }
                        },
                        pulseGlow: {
                            '0%, 100%': { boxShadow: '0 0 20px rgba(255, 255, 255, 0.1)' },
                            '50%': { boxShadow: '0 0 40px rgba(255, 255, 255, 0.2)' }
                        },
                        scaleIn: {
                            '0%': { transform: 'scale(0.9)', opacity: '0' },
                            '100%': { transform: 'scale(1)', opacity: '1' }
                        },
                        counterUp: {
                            '0%': { transform: 'scale(0.8)', opacity: '0' },
                            '100%': { transform: 'scale(1)', opacity: '1' }
                        }
                    }
                }
            }
        }
    </script>
    <style>
        .gradient-bg {
            background: linear-gradient(135deg, 
                #f8fafc 0%, 
                #e2e8f0 20%, 
                #cbd5e1 40%, 
                #94a3b8 60%, 
                #64748b 80%, 
                #475569 100%
            );
        }
        
        .glass-card {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(59, 130, 246, 0.2);
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        }
        
        .glass-input {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(59, 130, 246, 0.3);
            box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.1);
        }
        
        .btn-primary {
            background: linear-gradient(45deg, #3b82f6, #2563eb, #1d4ed8);
            transition: all 0.3s ease;
        }
        
        .btn-primary:hover {
            background: linear-gradient(45deg, #2563eb, #1d4ed8, #1e40af);
            transform: translateY(-2px);
        }
        
        .btn-secondary {
            background: linear-gradient(45deg, #e5e7eb, #d1d5db, #9ca3af);
            transition: all 0.3s ease;
            color: #374151;
        }
        
        .btn-secondary:hover {
            background: linear-gradient(45deg, #d1d5db, #9ca3af, #6b7280);
            transform: translateY(-2px);
        }

        .admin-card {
            transition: all 0.3s ease;
        }

        .admin-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 20px 40px rgba(0,0,0,0.3);
        }

        .stats-card {
            background: linear-gradient(135deg, rgba(255,255,255,0.95), rgba(255,255,255,0.9));
        }

        .pending-badge {
            background: linear-gradient(45deg, #3b82f6, #2563eb);
            animation: pulse-glow 2s ease-in-out infinite;
        }
        
        .floating-orbs::before,
        .floating-orbs::after {
            content: '';
            position: absolute;
            border-radius: 50%;
            background: radial-gradient(circle, rgba(59,130,246,0.1) 0%, transparent 70%);
            pointer-events: none;
        }
        
        .floating-orbs::before {
            width: 400px;
            height: 400px;
            top: -200px;
            right: -200px;
            animation: float 15s ease-in-out infinite;
        }
        
        .floating-orbs::after {
            width: 300px;
            height: 300px;
            bottom: -150px;
            left: -150px;
            animation: float 10s ease-in-out infinite reverse;
        }

        @keyframes float {
            0%, 100% { transform: rotate(0deg) translate(-20px) rotate(0deg); }
            50% { transform: rotate(180deg) translate(-20px) rotate(-180deg); }
        }

        .text-shadow {
            text-shadow: 0 2px 20px rgba(0,0,0,0.1);
        }

        .icon-gradient-blue {
            background: linear-gradient(45deg, #3b82f6, #1d4ed8);
        }

        .icon-gradient-green {
            background: linear-gradient(45deg, #3b82f6, #2563eb);
        }

        .icon-gradient-purple {
            background: linear-gradient(45deg, #3b82f6, #1d4ed8);
        }

        .icon-gradient-orange {
            background: linear-gradient(45deg, #3b82f6, #1e40af);
        }
    </style>
</head>

<body class="gradient-bg min-h-screen">
    <!-- Background Effects -->
    <div class="floating-orbs fixed inset-0 pointer-events-none"></div>
    
    <!-- Top Navigation -->
    <nav class="fixed top-0 left-0 right-0 z-50 glass-card border-b border-blue-200">
        <div class="px-4 py-3">
            <div class="flex items-center justify-between">
                <div class="flex items-center space-x-3">
                    <a href="{{ path('app_home') }}" class="w-8 h-8 rounded-full bg-gradient-to-r from-blue-600 to-blue-500 flex items-center justify-center">
                        <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
                        </svg>
                    </a>
                    <h1 class="text-gray-800 font-bold text-lg text-shadow">Dashboard Admin</h1>
                </div>
                <div class="flex items-center space-x-3">
                    <div class="w-8 h-8 bg-gradient-to-r from-blue-600 to-blue-500 rounded-full flex items-center justify-center">
                        <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"/>
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
                        </svg>
                    </div>
                    <a href="{{ path('app_logout') }}" class="w-8 h-8 bg-gradient-to-r from-red-600 to-red-500 rounded-full flex items-center justify-center hover:from-red-700 hover:to-red-600 transition-all duration-300" title="Déconnexion">
                        <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"/>
                        </svg>
                    </a>
                </div>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="pt-24 px-4 pb-24">
        
        <!-- Welcome Section -->
        <div class="mb-8 glass-card rounded-3xl p-6 animate-fade-in">
            <div class="flex items-center space-x-4">
                <div class="w-12 h-12 bg-gradient-to-r from-blue-600 to-blue-500 rounded-full flex items-center justify-center">
                    <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"/>
                    </svg>
                </div>
                <div>
                    <h2 class="text-2xl font-bold text-gray-800">Bienvenue dans l'administration</h2>
                    <p class="text-gray-600">Gérez votre plateforme AlloParents en toute simplicité</p>
                </div>
            </div>
        </div>

        <!-- Quick Stats -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
            <div class="stats-card glass-card rounded-2xl p-6 animate-slide-in-left">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-gray-600 text-sm font-medium">Enfants en attente</p>
                        <p class="text-3xl font-bold text-gray-800 animate-counter-up">{{ enfantsEnAttente|length }}</p>
                    </div>
                    <div class="w-12 h-12 icon-gradient-blue rounded-full flex items-center justify-center">
                        <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"/>
                        </svg>
                    </div>
                </div>
                {% if enfantsEnAttente|length > 0 %}
                    <div class="mt-2">
                        <span class="pending-badge text-white text-xs font-bold px-2 py-1 rounded-full">
                            Action requise
                        </span>
                    </div>
                {% endif %}
            </div>

            <div class="stats-card glass-card rounded-2xl p-6 animate-slide-in-left" style="animation-delay: 0.1s">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-gray-600 text-sm font-medium">Écoles en attente</p>
                        <p class="text-3xl font-bold text-gray-800 animate-counter-up">{{ ecolesEnAttente|length }}</p>
                    </div>
                    <div class="w-12 h-12 icon-gradient-green rounded-full flex items-center justify-center">
                        <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-4m-5 0H9m0 0H5m0 0h2M7 7h10M7 11h4m6 0h4M7 15h10"/>
                        </svg>
                    </div>
                </div>
                {% if ecolesEnAttente|length > 0 %}
                    <div class="mt-2">
                        <span class="pending-badge text-white text-xs font-bold px-2 py-1 rounded-full">
                            À examiner
                        </span>
                    </div>
                {% endif %}
            </div>

            <div class="stats-card glass-card rounded-2xl p-6 animate-slide-in-left" style="animation-delay: 0.2s">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-gray-600 text-sm font-medium">Total validations</p>
                        <p class="text-3xl font-bold text-gray-800 animate-counter-up">{{ (enfantsEnAttente|length) + (ecolesEnAttente|length) }}</p>
                    </div>
                    <div class="w-12 h-12 icon-gradient-purple rounded-full flex items-center justify-center">
                        <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"/>
                        </svg>
                    </div>
                </div>
            </div>
        </div>

        <!-- Management Cards -->
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8">
            <!-- Gestion des utilisateurs -->
            <div class="glass-card rounded-3xl p-6 admin-card animate-slide-in-left">
                <div class="text-center mb-6">
                    <div class="w-16 h-16 icon-gradient-blue rounded-full flex items-center justify-center mx-auto mb-4">
                        <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"/>
                        </svg>
                    </div>
                    <h3 class="text-xl font-bold text-gray-800 mb-2">Gestion des enfants</h3>
                    <p class="text-gray-600 text-sm">Valider les demandes d'inscription d'enfants</p>
                </div>

                <div class="space-y-3">
                    <a href="{{ path('admin_enfants_attente') }}" class="block w-full btn-primary text-white font-medium py-3 px-4 rounded-2xl transition-all duration-300 text-center transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-blue-200 shadow-lg hover:shadow-xl">
                        <div class="flex items-center justify-center space-x-2">
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
                            </svg>
                            <span>Enfants en attente ({{ enfantsEnAttente|length }})</span>
                        </div>
                    </a>
                </div>
            </div>

            <!-- Gestion des écoles -->
            <div class="glass-card rounded-3xl p-6 admin-card animate-slide-in-left" style="animation-delay: 0.1s">
                <div class="text-center mb-6">
                    <div class="w-16 h-16 icon-gradient-green rounded-full flex items-center justify-center mx-auto mb-4">
                        <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-4m-5 0H9m0 0H5m0 0h2M7 7h10M7 11h4m6 0h4M7 15h10"/>
                        </svg>
                    </div>
                    <h3 class="text-xl font-bold text-gray-800 mb-2">Gestion des écoles</h3>
                    <p class="text-gray-600 text-sm">Gérer les écoles et les suggestions</p>
                </div>

                <div class="space-y-3">
                    <a href="{{ path('admin_ecoles_attente') }}" class="block w-full btn-primary text-white font-medium py-3 px-4 rounded-2xl transition-all duration-300 text-center transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-blue-200 shadow-lg hover:shadow-xl">
                        <div class="flex items-center justify-center space-x-2">
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
                            </svg>
                            <span>Écoles en attente ({{ ecolesEnAttente|length }})</span>
                        </div>
                    </a>
                    <a href="{{ path('admin_ecoles_gestion') }}" class="block w-full btn-secondary font-medium py-3 px-4 rounded-2xl transition-all duration-300 text-center transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-gray-200 shadow-lg hover:shadow-xl">
                        <div class="flex items-center justify-center space-x-2">
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-4m-5 0H9m0 0H5m0 0h2M7 7h10M7 11h4m6 0h4M7 15h10"/>
                            </svg>
                            <span>Gérer les écoles</span>
                        </div>
                    </a>
            </div>
        </div>

                </div>



    </main>

    <!-- JavaScript for animations -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Parallax effect for floating orbs
            document.addEventListener('mousemove', (e) => {
                const x = e.clientX / window.innerWidth;
                const y = e.clientY / window.innerHeight;
                
                const orbs = document.querySelector('.floating-orbs');
                if (orbs) {
                    orbs.style.transform = `translate(${x * 8}px, ${y * 8}px)`;
                }
            });

            // Animate counters
            function animateCounters() {
                const counters = document.querySelectorAll('.animate-counter-up');
                counters.forEach(counter => {
                    const target = parseInt(counter.textContent);
                    let current = 0;
                    const increment = target / 30;
                    const timer = setInterval(() => {
                        current += increment;
                        if (current >= target) {
                            counter.textContent = target;
                            clearInterval(timer);
                        } else {
                            counter.textContent = Math.floor(current);
                        }
                    }, 50);
                });
            }

            // Start counter animation after a delay
            setTimeout(animateCounters, 500);
        });
    </script>
</body>
</html>