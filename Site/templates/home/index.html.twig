<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard - AlloParents</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    animation: {
                        'fade-in': 'fadeIn 0.6s ease-out',
                        'slide-up': 'slideUp 0.6s ease-out',
                        'slide-in-left': 'slideInLeft 0.8s ease-out',
                        'slide-in-right': 'slideInRight 0.8s ease-out',
                        'scale-in': 'scaleIn 0.3s ease-out',
                        'pulse-glow': 'pulseGlow 3s ease-in-out infinite',
                        'bounce-subtle': 'bounceSubtle 2s ease-in-out infinite',
                        'float': 'float 6s ease-in-out infinite',
                    },
                    keyframes: {
                        fadeIn: {
                            '0%': { opacity: '0', transform: 'scale(0.95)' },
                            '100%': { opacity: '1', transform: 'scale(1)' }
                        },
                        slideUp: {
                            '0%': { transform: 'translateY(30px)', opacity: '0' },
                            '100%': { transform: 'translateY(0)', opacity: '1' }
                        },
                        slideInLeft: {
                            '0%': { transform: 'translateX(-30px)', opacity: '0' },
                            '100%': { transform: 'translateX(0)', opacity: '1' }
                        },
                        slideInRight: {
                            '0%': { transform: 'translateX(30px)', opacity: '0' },
                            '100%': { transform: 'translateX(0)', opacity: '1' }
                        },
                        pulseGlow: {
                            '0%, 100%': { boxShadow: '0 0 20px rgba(255, 255, 255, 0.1)' },
                            '50%': { boxShadow: '0 0 40px rgba(255, 255, 255, 0.2)' }
                        },
                        bounceSubtle: {
                            '0%, 100%': { transform: 'translateY(0)' },
                            '50%': { transform: 'translateY(-5px)' }
                        },
                        float: {
                            '0%, 100%': { transform: 'translateY(0px)' },
                            '50%': { transform: 'translateY(-10px)' }
                        },
                        scaleIn: {
                            '0%': { opacity: '0', transform: 'scale(0.8)' },
                            '100%': { opacity: '1', transform: 'scale(1)' }
                        }
                    }
                }
            }
        }
    </script>
    <style>
        .gradient-bg {
            background: linear-gradient(135deg, 
                #ffffff 0%, 
                #f8fafc 25%, 
                #f1f5f9 50%, 
                #e2e8f0 75%, 
                #cbd5e1 100%
            );
        }
        
        .glass-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(0, 0, 0, 0.08);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.08), 0 4px 16px rgba(0, 0, 0, 0.04);
        }
        
        .glass-card:hover {
            background: rgba(255, 255, 255, 1);
            border-color: rgba(0, 0, 0, 0.12);
            box-shadow: 0 16px 48px rgba(0, 0, 0, 0.12), 0 8px 24px rgba(0, 0, 0, 0.06);
            transform: translateY(-2px);
        }

        .bottom-nav {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(0, 0, 0, 0.08);
            box-shadow: 0 -8px 32px rgba(0, 0, 0, 0.08), 0 -4px 16px rgba(0, 0, 0, 0.04);
        }
        
        .points-glow {
            background: linear-gradient(135deg, #fbbf24, #f59e0b, #d97706, #fbbf24);
            box-shadow: 0 0 20px rgba(251, 191, 36, 0.3), 0 0 10px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(251, 191, 36, 0.4);
        }
        
        .floating-orbs::before,
        .floating-orbs::after {
            content: '';
            position: absolute;
            border-radius: 50%;
            background: radial-gradient(circle, rgba(59, 130, 246, 0.1) 0%, transparent 70%);
            pointer-events: none;
        }
        
        .floating-orbs::before {
            width: 400px;
            height: 400px;
            top: -200px;
            right: -200px;
            animation: float 12s ease-in-out infinite;
        }
        
        .floating-orbs::after {
            width: 300px;
            height: 300px;
            bottom: -150px;
            left: -150px;
            animation: float 8s ease-in-out infinite reverse;
        }

        .stat-card {
            background: linear-gradient(145deg, rgba(255, 255, 255, 0.95), rgba(255, 255, 255, 0.85));
            backdrop-filter: blur(15px);
            border: 1px solid rgba(0, 0, 0, 0.08);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.08), 0 4px 16px rgba(0, 0, 0, 0.04);
        }

        .action-btn {
            background: linear-gradient(45deg, #3b82f6, #2563eb);
            transition: all 0.3s ease;
            box-shadow: 0 8px 32px rgba(59, 130, 246, 0.2), 0 4px 16px rgba(59, 130, 246, 0.1);
        }

        .action-btn:hover {
            background: linear-gradient(45deg, #2563eb, #1d4ed8);
            transform: translateY(-2px);
            box-shadow: 0 16px 48px rgba(59, 130, 246, 0.3), 0 8px 24px rgba(59, 130, 246, 0.15);
        }

        .text-shadow {
            text-shadow: 0 2px 8px rgba(0,0,0,0.05);
        }

        .btn-primary {
            background: linear-gradient(45deg, #3b82f6, #2563eb, #1d4ed8);
            transition: all 0.3s ease;
        }
        
        .btn-primary:hover {
            background: linear-gradient(45deg, #2563eb, #1d4ed8, #1e40af);
            transform: translateY(-2px);
        }
    </style>
</head>

<body class="gradient-bg min-h-screen">
    <!-- Background Effects -->
    <div class="floating-orbs fixed inset-0 pointer-events-none"></div>
    
    {% include 'partials/_top_navigation.html.twig' with {'pageTitle': 'AlloParents', 'userPoints': userPoints} %}

    <!-- Main Content -->
    <main class="pt-24 px-4 pb-24">
        <!-- Header Section -->
        <div class="mb-8 animate-fade-in">
            <div class="text-center">
                <h1 class="text-2xl sm:text-3xl font-bold text-gray-800 mb-2 text-shadow">
                    Bonjour {{ user.prenom }} ! üëã
                </h1>
                <p class="text-gray-600 text-sm">
                    {{ "now"|date("l d F Y") }} ‚Ä¢ {{ "now"|date("H:i") }}
                </p>
            </div>
        </div>

        <!-- Points Display -->
        <div class="mb-6 animate-slide-up">
            <div class="points-glow rounded-2xl p-4 text-center relative overflow-hidden">
                <div class="absolute inset-0 bg-gradient-to-r from-yellow-400/5 to-orange-400/5"></div>
                <div class="relative z-10">
                    <div class="text-2xl mb-1">üí∞</div>
                    <div class="text-gray-800 font-bold text-xl mb-1">{{ userPoints }}</div>
                    <div class="text-gray-700 text-sm">points disponibles</div>

                </div>
            </div>
        </div>

        <!-- Quick Stats -->
        <div class="grid grid-cols-2 gap-3 mb-8 animate-slide-up">
            <div class="stat-card rounded-2xl p-4 text-center">
                <div class="text-2xl mb-1">üöó</div>
                <div class="text-gray-800 font-bold text-lg">{{ stats.trajetsEffectues }}</div>
                <div class="text-gray-600 text-xs">Trajets</div>
            </div>
            <div class="stat-card rounded-2xl p-4 text-center relative group">
                <div class="text-2xl mb-1">üå±</div>
                <div class="text-green-600 font-bold text-lg">{{ stats.co2Economise }}kg</div>
                <div class="text-gray-600 text-xs">CO‚ÇÇ √©vit√©</div>
                
                <!-- Tooltip explicatif -->
                <div class="absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 hidden group-hover:block z-10">
                    <div class="bg-gray-800 text-white text-xs rounded-lg p-3 shadow-lg max-w-64">
                        <p class="font-medium mb-1">üí° Comment c'est calcul√© ?</p>
                        <p class="text-gray-300">Bas√© sur la distance r√©elle des trajets et le nombre d'enfants transport√©s. Plus de covoiturage = plus d'√©conomies !</p>
                        <div class="absolute top-full left-1/2 transform -translate-x-1/2 border-4 border-transparent border-t-gray-800"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Quick Actions -->
        <div class="mb-8 animate-slide-in-left">
            <h2 class="text-gray-800 font-bold text-lg mb-4">Actions rapides</h2>
            <div class="grid grid-cols-2 gap-3">
                <a href="{{ path('trajet_rechercher') }}" class="action-btn rounded-2xl p-4 text-center group">
                    <div class="text-3xl mb-2 group-hover:scale-110 transition-transform">üîç</div>
                    <div class="text-white font-medium text-sm">Rechercher</div>
                    <div class="text-blue-50 text-xs">un trajet</div>
                </a>
                <a href="{{ path('trajet_ajouter') }}" class="action-btn rounded-2xl p-4 text-center group">
                    <div class="text-3xl mb-2 group-hover:scale-110 transition-transform">üöó</div>
                    <div class="text-white font-medium text-sm">Cr√©er</div>
                    <div class="text-blue-50 text-xs">un trajet</div>
                </a>
            </div>
        </div>

        <!-- Mes Trajets Aujourd'hui -->
        <div class="mb-8 animate-slide-in-right">
            <h2 class="text-gray-800 font-bold text-lg mb-4">Aujourd'hui</h2>
            
            {% if trajetsAujourdhui is empty and mesReservations is empty %}
                <div class="glass-card rounded-2xl p-6 text-center">
                    <div class="text-4xl mb-3">üò¥</div>
                    <div class="text-gray-800 font-medium mb-2">Rien de pr√©vu</div>
                    <div class="text-gray-600 text-sm">Profitez de votre journ√©e !</div>
                </div>
            {% else %}
                <div class="space-y-3">
                    <!-- Trajets que je conduis -->
                    {% for trajet in trajetsAujourdhui %}
                        <div class="glass-card rounded-2xl p-4 cursor-pointer hover:bg-white/10 transition-all duration-300 hover:transform hover:scale-[1.02]" onclick="window.location.href='{{ path('trajet_mes_trajets') }}'">
                            <div class="flex items-center justify-between">
                                <div class="flex items-center space-x-3">
                                    <div class="w-10 h-10 bg-blue-500/20 rounded-full flex items-center justify-center">
                                        <svg class="w-5 h-5 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                                        </svg>
                                    </div>
                                    <div class="flex-1">
                                        <div class="flex items-center space-x-2">
                                            <span class="text-gray-800 font-medium text-sm">Je conduis</span>
                                            {% if trajet.mesEnfantsDansTrajet is defined and trajet.mesEnfantsDansTrajet|length > 0 %}
                                                <div class="flex items-center space-x-1">
                                                    {% for enfant in trajet.mesEnfantsDansTrajet %}
                                                        <span class="text-purple-400 text-xs bg-purple-500/20 px-2 py-0.5 rounded-full">
                                                            {{ enfant.prenom }}
                                                        </span>
                                                    {% endfor %}
                                                </div>
                                            {% endif %}
                                        </div>
                                        <div class="text-gray-600 text-xs">{{ trajet.pointDepart|slice(0, 20) }}...</div>
                                    </div>
                                </div>
                                <div class="flex items-center space-x-3">
                                    <div class="text-right">
                                        <div class="text-gray-800 font-bold text-sm">{{ trajet.heureDepart }}</div>
                                        <div class="text-gray-600 text-xs">
                                            {% set placesDisponibles = trajet.nombrePlaces - (trajet.enfantsIds|length) %}
                                            {{ placesDisponibles }} place{{ placesDisponibles > 1 ? 's' : '' }}
                                        </div>
                                    </div>
                                    <svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                                    </svg>
                                </div>
                            </div>
                        </div>
                    {% endfor %}

                    <!-- Trajets r√©serv√©s -->
                    {% for reservation in mesReservations %}
                        <div class="glass-card rounded-2xl p-4 cursor-pointer hover:bg-white/10 transition-all duration-300 hover:transform hover:scale-[1.02]" onclick="window.location.href='{{ path('mes_reservations') }}'">
                            <div class="flex items-center justify-between">
                                <div class="flex items-center space-x-3">
                                    <div class="w-10 h-10 bg-green-500/20 rounded-full flex items-center justify-center">
                                        <svg class="w-5 h-5 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
                                        </svg>
                                    </div>
                                    <div class="flex-1">
                                        <div class="text-gray-800 font-medium text-sm">R√©serv√©</div>
                                        <div class="text-gray-600 text-xs">{{ reservation.pointDepart|slice(0, 20) }}...</div>
                                    </div>
                                </div>
                                <div class="flex items-center space-x-3">
                                    <div class="text-right">
                                        <div class="text-gray-800 font-bold text-sm">{{ reservation.heureDepart }}</div>
                                        <div class="text-gray-600 text-xs">{{ reservation.pointsCout }} pts</div>
                                    </div>
                                    <svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                                    </svg>
                                </div>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            {% endif %}
        </div>

        <!-- Mes Enfants -->
        {% if mesEnfants is not empty %}
            <div class="mb-8 animate-slide-up">
                <h2 class="text-gray-800 font-bold text-lg mb-4">Mes enfants</h2>
                <div class="space-y-3">
                    {% for enfant in mesEnfants|slice(0, 3) %}
                        <div class="glass-card rounded-2xl p-4">
                            <div class="flex items-center space-x-3">
                                <div class="w-10 h-10 bg-purple-500/20 rounded-full flex items-center justify-center">
                                    <span class="text-purple-400 font-bold text-sm">{{ enfant.prenom|slice(0, 1) }}</span>
                                </div>
                                <div class="flex-1">
                                    <div class="text-gray-800 font-medium text-sm">{{ enfant.prenom }} {{ enfant.nom }}</div>
                                    <div class="text-gray-600 text-xs">{{ enfant.age }} ans</div>
                                </div>
                                <div class="text-right">
                                    {% if enfant.valide %}
                                        <div class="text-green-400 text-xs">‚úì Valid√©</div>
                                    {% else %}
                                        <div class="text-yellow-400 text-xs">‚è≥ En attente</div>
                                    {% endif %}
                                </div>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>
        {% endif %}

        <!-- Trajets Populaires -->
        {% if trajetsPopulaires is not empty %}
            <div class="mb-8 animate-slide-in-left">
                <h2 class="text-gray-800 font-bold text-lg mb-4">Trajets disponibles</h2>
                <div class="space-y-3">
                    {% for trajet in trajetsPopulaires %}
                        <div class="glass-card rounded-2xl p-4 cursor-pointer hover:bg-white/10 transition-all duration-300 hover:transform hover:scale-[1.02] trajet-item" 
                             data-date="{{ trajet.dateDepart }}" 
                             data-ecole="{{ trajet.ecoleArriveeId }}"
                             onclick="window.location.href='/trajet/rechercher?date={{ trajet.dateDepart }}&ecoleId={{ trajet.ecoleArriveeId }}'">
                            <div class="flex items-center justify-between">
                                <div class="flex-1">
                                    <div class="text-gray-800 font-medium text-sm mb-1">{{ trajet.pointDepart|slice(0, 25) }}...</div>
                                    <div class="text-gray-600 text-xs">‚Üí {% if trajet.ecole is defined and trajet.ecole.nom is defined %}{{ trajet.ecole.nom }} - {{ trajet.ecole.ville }}{% else %}√âcole de destination{% endif %}</div>
                                    {% if trajet.conducteur is defined and trajet.conducteur %}
                                        <div class="text-blue-400 text-xs mt-1">Par {{ trajet.conducteur.prenom }} {{ trajet.conducteur.nom }}</div>
                                    {% endif %}
                                </div>
                                <div class="text-right ml-3">
                                    <div class="text-gray-800 font-bold text-sm">{{ trajet.heureDepart }}</div>
                                    <div class="text-gray-600 text-xs">{{ trajet.pointsCout }} pts</div>
                                    <div class="text-green-400 text-xs">
                                        {% set placesDisponibles = trajet.nombrePlaces - (trajet.enfantsIds|length) %}
                                        {{ placesDisponibles }} place{{ placesDisponibles > 1 ? 's' : '' }}
                                    </div>
                                </div>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>
        {% endif %}
    </main>

    {% include 'partials/_bottom_navigation.html.twig' %}

          <!-- JavaScript for enhanced interactions -->
      <script>
        // Variables globales pour le menu Plus
        let moreMenuOpen = false;

        // Event listeners pour les trajets disponibles
        document.addEventListener('DOMContentLoaded', function() {
            console.log('DOM loaded, setting up trajet click handlers');
            
            // Gestion des clics sur les trajets disponibles
            document.addEventListener('click', function(e) {
                console.log('Click detected on:', e.target);
                const trajetItem = e.target.closest('.trajet-item');
                console.log('Trajet item found:', trajetItem);
                
                if (trajetItem) {
                    const dateDepart = trajetItem.getAttribute('data-date');
                    const ecoleId = trajetItem.getAttribute('data-ecole');
                    console.log('Date:', dateDepart, 'Ecole:', ecoleId);
                    
                    if (dateDepart && ecoleId) {
                        // Rediriger vers la page de recherche avec les param√®tres pr√©-remplis
                        const url = '/trajet/rechercher?date=' + encodeURIComponent(dateDepart) + '&ecoleId=' + encodeURIComponent(ecoleId);
                        console.log('Redirecting to:', url);
                        window.location.href = url;
                    } else {
                        console.log('Missing data attributes');
                    }
                }
            });
            
            // V√©rifier que les √©l√©ments trajet-item existent
            const trajetItems = document.querySelectorAll('.trajet-item');
            console.log('Found trajet items:', trajetItems.length);
            trajetItems.forEach((item, index) => {
                console.log(`Item ${index}:`, item.getAttribute('data-date'), item.getAttribute('data-ecole'));
            });
        });

        // Gestion du menu Plus
        window.toggleMoreMenu = function() {
            const menu = document.getElementById('moreMenu');
            const button = document.getElementById('moreButton');
            
            if (moreMenuOpen) {
                menu.style.transform = 'scale(0)';
                button.classList.remove('text-white');
                button.classList.add('text-gray-400');
                moreMenuOpen = false;
            } else {
                menu.style.transform = 'scale(1)';
                button.classList.remove('text-gray-400');
                button.classList.add('text-white');
                moreMenuOpen = true;
            }
        };

        // Fermer le menu en cliquant en dehors
        document.addEventListener('click', function(e) {
            const menu = document.getElementById('moreMenu');
            const button = document.getElementById('moreButton');
            
            if (moreMenuOpen && !menu.contains(e.target) && !button.contains(e.target)) {
                menu.style.transform = 'scale(0)';
                button.classList.remove('text-white');
                button.classList.add('text-gray-400');
                moreMenuOpen = false;
            }
        });


        // Staggered animations on load
        document.addEventListener('DOMContentLoaded', function() {
            console.log('Setting up animations');
            const elements = document.querySelectorAll('.animate-slide-up, .animate-slide-in-left, .animate-slide-in-right');
            elements.forEach((el, index) => {
                setTimeout(() => {
                    el.style.opacity = '1';
                    el.style.transform = 'translateX(0) translateY(0)';
                }, index * 150);
            });
        });

        // Parallax effect for floating orbs
        document.addEventListener('mousemove', (e) => {
            const x = e.clientX / window.innerWidth;
            const y = e.clientY / window.innerHeight;
            
            const orbs = document.querySelector('.floating-orbs');
            if (orbs) {
                orbs.style.transform = `translate(${x * 10}px, ${y * 10}px)`;
            }
        });

        // Pull to refresh simulation
        let startY = 0;
        let currentY = 0;
        let pulling = false;

        document.addEventListener('touchstart', (e) => {
            if (window.scrollY === 0) {
                startY = e.touches[0].clientY;
                pulling = true;
            }
        });

        document.addEventListener('touchmove', (e) => {
            if (pulling && window.scrollY === 0) {
                currentY = e.touches[0].clientY;
                const diff = currentY - startY;
                if (diff > 0 && diff < 100) {
                    document.body.style.transform = `translateY(${diff * 0.5}px)`;
                }
            }
        });

        document.addEventListener('touchend', () => {
            if (pulling) {
                document.body.style.transform = '';
                pulling = false;
                
                const diff = currentY - startY;
                if (diff > 50) {
                    // Simulate refresh
                    window.location.reload();
                }
            }
        });

        // Modal functionality for trajet details
        window.openTrajetModal = function(trajetId, role) {
            console.log('Opening modal for trajet', trajetId, 'role', role);
            
            // Get current user ID for chat permissions
            const currentUserId = {{ app.user.id }};
            
            // Create modal container
            const modal = document.createElement('div');
            modal.id = 'trajetModal';
            modal.className = 'fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/50 backdrop-blur-sm animate-fade-in';
            
            // Determine colors based on role
            const bgColor = role === 'conducteur' ? 'from-blue-500 to-blue-600' : 'from-green-500 to-green-600';
            const title = role === 'conducteur' ? 'Trajet que je conduis' : 'Trajet r√©serv√©';
            const icon = role === 'conducteur' ? 
                '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>' :
                '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>';
            
            modal.innerHTML = 
                '<div class="glass-card rounded-3xl max-w-lg w-full max-h-[90vh] overflow-y-auto animate-scale-in">' +
                    '<div class="p-6 border-b border-white/10">' +
                        '<div class="flex items-center justify-between">' +
                            '<div class="flex items-center space-x-3">' +
                                '<div class="w-10 h-10 bg-gradient-to-r ' + bgColor + ' rounded-full flex items-center justify-center">' +
                                    '<svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">' +
                                        icon +
                                    '</svg>' +
                                '</div>' +
                                '<div>' +
                                    '<h3 class="text-white font-bold text-lg">' + title + '</h3>' +
                                    '<p class="text-gray-300 text-sm">Trajet #' + trajetId + '</p>' +
                                '</div>' +
                            '</div>' +
                            '<button onclick="closeTrajetModal()" class="w-8 h-8 bg-red-500/20 rounded-full flex items-center justify-center hover:bg-red-500/30 transition-colors">' +
                                '<svg class="w-4 h-4 text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">' +
                                    '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>' +
                                '</svg>' +
                            '</button>' +
                        '</div>' +
                    '</div>' +
                    '<div class="p-6 space-y-6">' +
                        '<div id="trajetInfo" class="glass-input rounded-2xl p-4">' +
                            '<h4 class="text-white font-semibold mb-3">Informations du trajet</h4>' +
                            '<div class="text-gray-400 text-sm animate-pulse">Chargement des informations...</div>' +
                        '</div>' +
                        '<div id="childrenList" class="glass-input rounded-2xl p-4">' +
                            '<h4 class="text-white font-semibold mb-3">Enfants dans ce trajet</h4>' +
                            '<div class="text-gray-400 text-sm animate-pulse">Chargement des enfants...</div>' +
                        '</div>' +
                        '<div class="flex flex-col space-y-3">' +
                            '<button onclick="openTrajetChat(' + trajetId + ')" class="btn-primary text-white font-medium py-3 px-6 rounded-2xl transition-all duration-300 text-center transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-white/20 shadow-lg hover:shadow-xl">' +
                                '<div class="flex items-center justify-center space-x-2">' +
                                    '<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">' +
                                        '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-3.582 8-8 8a9.863 9.863 0 01-4.255-.949L5 20l1.395-3.72C7.512 15.042 9.201 14 12 14c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8c0 2.928 1.175 5.584 3.088 7.543L5.395 16.28 3 17l2.395-.72"/>' +
                                    '</svg>' +
                                    '<span>Ouvrir le chat</span>' +
                                '</div>' +
                            '</button>' +
                            (role === 'conducteur' ? 
                                '<button onclick="window.location.href=\'/trajet/mes-trajets\'" class="btn-secondary text-white font-medium py-3 px-6 rounded-2xl transition-all duration-300 text-center transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-white/20 shadow-lg hover:shadow-xl bg-gradient-to-r from-gray-600 to-gray-700 hover:from-gray-700 hover:to-gray-800">' +
                                    '<div class="flex items-center justify-center space-x-2">' +
                                        '<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">' +
                                            '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"/>' +
                                        '</svg>' +
                                        '<span>G√©rer mes trajets</span>' +
                                    '</div>' +
                                '</button>'
                                :
                                '<button onclick="window.location.href=\'/mes-reservations/\'" class="btn-secondary text-white font-medium py-3 px-6 rounded-2xl transition-all duration-300 text-center transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-white/20 shadow-lg hover:shadow-xl bg-gradient-to-r from-gray-600 to-gray-700 hover:from-gray-700 hover:to-gray-800">' +
                                    '<div class="flex items-center justify-center space-x-2">' +
                                        '<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">' +
                                            '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"/>' +
                                        '</svg>' +
                                        '<span>Mes r√©servations</span>' +
                                    '</div>' +
                                '</button>'
                            ) +
                        '</div>' +
                    '</div>' +
                '</div>';

            // Add modal to body
            document.body.appendChild(modal);
            
            // Load trajet data and children data
            loadTrajetData(trajetId);
            loadTrajetChildren(trajetId);
        };

        window.closeTrajetModal = function() {
            const modal = document.getElementById('trajetModal');
            if (modal) {
                modal.remove();
            }
        };

        window.openTrajetChat = function(trajetId) {
            // Close modal and navigate to chat
            closeTrajetModal();
            window.location.href = '/chat/messages';
        };

        // Load trajet data
        function loadTrajetData(trajetId) {
            // Utiliser l'endpoint Symfony qui g√®re le CORS
            fetch('/api/trajets/' + trajetId + '/details')
                .then(response => response.json())
                .then(data => {
                    const trajetContainer = document.getElementById('trajetInfo');
                    const trajetHTML = 
                        '<h4 class="text-white font-semibold mb-3">Informations du trajet</h4>' +
                        '<div class="space-y-2 text-sm">' +
                            '<div class="flex justify-between">' +
                                '<span class="text-gray-400">D√©part:</span>' +
                                '<span class="text-white">' + data.pointDepart + '</span>' +
                            '</div>' +
                            '<div class="flex justify-between">' +
                                '<span class="text-gray-400">Arriv√©e:</span>' +
                                '<span class="text-white">' + (data.ecole ? data.ecole.nom + ' - ' + data.ecole.ville : '√âcole de destination') + '</span>' +
                            '</div>' +
                            '<div class="flex justify-between">' +
                                '<span class="text-gray-400">Date:</span>' +
                                '<span class="text-white">' + data.dateDepart + '</span>' +
                            '</div>' +
                            '<div class="flex justify-between">' +
                                '<span class="text-gray-400">Heure de d√©part:</span>' +
                                '<span class="text-white">' + data.heureDepart + '</span>' +
                            '</div>' +
                            '<div class="flex justify-between">' +
                                '<span class="text-gray-400">Places disponibles:</span>' +
                                '<span class="text-white">' + data.nombrePlaces + '</span>' +
                            '</div>' +
                            '<div class="flex justify-between">' +
                                '<span class="text-gray-400">Co√ªt en points:</span>' +
                                '<span class="text-white">' + (data.pointsCout || data.coutPoints || 'N/A') + ' pts</span>' +
                            '</div>' +
                        '</div>';
                    trajetContainer.innerHTML = trajetHTML;
                })
                .catch(error => {
                    console.error('Error loading trajet data:', error);
                    const trajetContainer = document.getElementById('trajetInfo');
                    trajetContainer.innerHTML = 
                        '<h4 class="text-white font-semibold mb-3">Informations du trajet</h4>' +
                        '<div class="text-red-400 text-sm text-center py-4">' +
                            'Erreur lors du chargement des informations' +
                        '</div>';
                });
        }

        // Load children for a trajet
        function loadTrajetChildren(trajetId) {
            const currentUserId = {{ app.user.id }};
            
            fetch('/api/trajets/' + trajetId + '/enfants')
                .then(response => response.json())
                .then(data => {
                    const childrenContainer = document.getElementById('childrenList');
                    if (data && data.length > 0) {
                        const childrenHTML = data.map(enfant => {
                            // Ne pas afficher le bouton de chat si c'est l'enfant de l'utilisateur actuel
                            const chatButton = enfant.userId !== currentUserId ? 
                                '<div class="text-right">' +
                                    '<button onclick="openChildChat(' + enfant.userId + ', ' + trajetId + ')" class="w-8 h-8 bg-blue-500/20 rounded-full flex items-center justify-center hover:bg-blue-500/30 transition-colors" title="Contacter le parent">' +
                                        '<svg class="w-4 h-4 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">' +
                                            '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-3.582 8-8 8a9.863 9.863 0 01-4.255-.949L5 20l1.395-3.72C7.512 15.042 9.201 14 12 14c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8c0 2.928 1.175 5.584 3.088 7.543L5.395 16.28 3 17l2.395-.72"/>' +
                                        '</svg>' +
                                    '</button>' +
                                '</div>' :
                                '<div class="text-right">' +
                                    '<div class="text-gray-500 text-xs">Votre enfant</div>' +
                                '</div>';

                            return '<div class="flex items-center space-x-3 p-3 glass-input rounded-xl mb-2">' +
                                '<div class="w-8 h-8 bg-purple-500/20 rounded-full flex items-center justify-center">' +
                                    '<span class="text-purple-400 font-bold text-sm">' + enfant.prenom.charAt(0) + '</span>' +
                                '</div>' +
                                '<div class="flex-1">' +
                                    '<div class="text-white font-medium text-sm">' + enfant.prenom + ' ' + enfant.nom + '</div>' +
                                    '<div class="text-gray-400 text-xs">' + enfant.age + ' ans ‚Ä¢ √âcole: ' + (enfant.ecole || 'Non sp√©cifi√©e') + '</div>' +
                                '</div>' +
                                chatButton +
                            '</div>';
                        }).join('');
                        
                        childrenContainer.innerHTML = 
                            '<h4 class="text-white font-semibold mb-3">Enfants dans ce trajet (' + data.length + ')</h4>' +
                            childrenHTML;
                    } else {
                        childrenContainer.innerHTML = 
                            '<h4 class="text-white font-semibold mb-3">Enfants dans ce trajet</h4>' +
                            '<div class="text-gray-400 text-sm text-center py-4">' +
                                '<div class="text-2xl mb-2">üë•</div>' +
                                'Aucun enfant inscrit pour le moment' +
                            '</div>';
                    }
                })
                .catch(error => {
                    console.error('Error loading children:', error);
                    const childrenContainer = document.getElementById('childrenList');
                    childrenContainer.innerHTML = 
                        '<h4 class="text-white font-semibold mb-3">Enfants dans ce trajet</h4>' +
                        '<div class="text-red-400 text-sm text-center py-4">' +
                            'Erreur lors du chargement des enfants' +
                        '</div>';
                });
        }

        window.openChildChat = function(userId, trajetId) {
            closeTrajetModal();
            window.location.href = '/chat/conversation/' + trajetId + '/' + userId;
        };



        // Close modal on escape key
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeTrajetModal();
            }
        });

        // Close modal on backdrop click
        document.addEventListener('click', function(e) {
            if (e.target && e.target.id === 'trajetModal') {
                closeTrajetModal();
            }
        });
    </script>
</body>
</html>