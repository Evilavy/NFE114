<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Rechercher des trajets - AlloParents</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    animation: {
                        'fade-in': 'fadeIn 0.6s ease-out',
                        'slide-up': 'slideUp 0.6s ease-out',
                        'slide-in-left': 'slideInLeft 0.8s ease-out',
                        'slide-in-right': 'slideInRight 0.8s ease-out',
                        'pulse-glow': 'pulseGlow 3s ease-in-out infinite',
                        'bounce-subtle': 'bounceSubtle 2s ease-in-out infinite',
                        'scale-in': 'scaleIn 0.4s ease-out',
                    },
                    keyframes: {
                        fadeIn: {
                            '0%': { opacity: '0', transform: 'scale(0.95)' },
                            '100%': { opacity: '1', transform: 'scale(1)' }
                        },
                        slideUp: {
                            '0%': { transform: 'translateY(30px)', opacity: '0' },
                            '100%': { transform: 'translateY(0)', opacity: '1' }
                        },
                        slideInLeft: {
                            '0%': { transform: 'translateX(-30px)', opacity: '0' },
                            '100%': { transform: 'translateX(0)', opacity: '1' }
                        },
                        slideInRight: {
                            '0%': { transform: 'translateX(30px)', opacity: '0' },
                            '100%': { transform: 'translateX(0)', opacity: '1' }
                        },
                        pulseGlow: {
                            '0%, 100%': { boxShadow: '0 0 20px rgba(255, 255, 255, 0.1)' },
                            '50%': { boxShadow: '0 0 40px rgba(255, 255, 255, 0.2)' }
                        },
                        bounceSubtle: {
                            '0%, 100%': { transform: 'translateY(0)' },
                            '50%': { transform: 'translateY(-5px)' }
                        },
                        scaleIn: {
                            '0%': { transform: 'scale(0.9)', opacity: '0' },
                            '100%': { transform: 'scale(1)', opacity: '1' }
                        }
                    }
                }
            }
        }
    </script>
    <style>
        .gradient-bg {
            background: linear-gradient(135deg,
                #ffffff 0%,
                #f8fafc 25%,
                #f1f5f9 50%,
                #e2e8f0 75%,
                #cbd5e1 100%
            );
        }
        
        .glass-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(0, 0, 0, 0.08);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.08), 0 4px 16px rgba(0, 0, 0, 0.04);
        }
        
        .glass-input {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(0, 0, 0, 0.1);
        }
        
        .glass-input:focus {
            background: rgba(255, 255, 255, 1);
            border-color: rgba(59, 130, 246, 0.5);
            box-shadow: 0 0 30px rgba(59, 130, 246, 0.1);
        }
        
        .btn-search {
            background: linear-gradient(45deg, #3b82f6, #2563eb, #1d4ed8);
            transition: all 0.3s ease;
        }
        
        .btn-search:hover {
            background: linear-gradient(45deg, #2563eb, #1d4ed8, #1e40af);
            transform: translateY(-2px);
        }
        
        .btn-reserve {
            background: linear-gradient(45deg, #3b82f6, #2563eb, #1d4ed8);
            transition: all 0.3s ease;
        }
        
        .btn-reserve:hover {
            background: linear-gradient(45deg, #2563eb, #1d4ed8, #1e40af);
            transform: translateY(-1px);
        }
        
        .btn-contact {
            background: linear-gradient(45deg, #1d4ed8, #2563eb);
            transition: all 0.3s ease;
        }
        
        .btn-contact:hover {
            background: linear-gradient(45deg, #1e40af, #1d4ed8);
            transform: translateY(-1px);
        }
        
        .floating-orbs::before,
        .floating-orbs::after {
            content: '';
            position: absolute;
            border-radius: 50%;
            background: radial-gradient(circle, rgba(59, 130, 246, 0.1) 0%, transparent 70%);
            pointer-events: none;
        }
        
        .floating-orbs::before {
            width: 400px;
            height: 400px;
            top: -200px;
            right: -200px;
            animation: float 15s ease-in-out infinite;
        }
        
        .floating-orbs::after {
            width: 300px;
            height: 300px;
            bottom: -150px;
            left: -150px;
            animation: float 10s ease-in-out infinite reverse;
        }

        .text-shadow {
            text-shadow: 0 2px 20px rgba(0,0,0,0.1);
        }

        .status-available {
            background: linear-gradient(45deg, #2563eb, #1d4ed8);
        }
        
        .status-full {
            background: linear-gradient(45deg, #9ca3af, #6b7280);
        }
        
        .status-finished {
            background: linear-gradient(45deg, #374151, #4b5563);
        }
    </style>
    
    <!-- Leaflet CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
</head>

<body class="gradient-bg min-h-screen">
    <!-- Background Effects -->
    <div class="floating-orbs fixed inset-0 pointer-events-none"></div>
    
    {% include 'partials/_top_navigation.html.twig' with {'pageTitle': 'Rechercher'} %}

    <!-- Main Content -->
    <main class="pt-24 px-4 pb-24">
        
        <!-- Flash Messages -->
        {% for message in app.flashes('success') %}
            <div class="mb-4 p-4 rounded-2xl bg-emerald-500/10 border border-emerald-500/20 backdrop-blur-sm animate-scale-in">
                <div class="flex items-start">
                    <svg class="w-5 h-5 text-emerald-400 mr-3 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                    </svg>
                    <p class="text-emerald-200 text-sm">{{ message }}</p>
                </div>
            </div>
        {% endfor %}

        {% for message in app.flashes('error') %}
            <div class="mb-4 p-4 rounded-2xl bg-red-500/10 border border-red-500/20 backdrop-blur-sm animate-scale-in">
                <div class="flex items-start">
                    <svg class="w-5 h-5 text-red-400 mr-3 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
                    </svg>
                    <p class="text-red-200 text-sm">{{ message }}</p>
                </div>
            </div>
        {% endfor %}

        {% for message in app.flashes('warning') %}
            <div class="mb-4 p-4 rounded-2xl bg-yellow-500/10 border border-yellow-500/20 backdrop-blur-sm animate-scale-in">
                <div class="flex items-start">
                    <svg class="w-5 h-5 text-yellow-400 mr-3 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4.5c-.77-.833-2.694-.833-3.464 0L3.34 16.5c-.77.833.192 2.5 1.732 2.5z"/>
                    </svg>
                    <p class="text-yellow-200 text-sm">{{ message }}</p>
                </div>
            </div>
        {% endfor %}

        {% if error %}
            <div class="mb-4 p-4 rounded-2xl bg-red-500/10 border border-red-500/20 backdrop-blur-sm animate-scale-in">
                <div class="flex items-start">
                    <svg class="w-5 h-5 text-red-400 mr-3 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
                    </svg>
                    <p class="text-red-200 text-sm">{{ error|raw }}</p>
                </div>
            </div>
        {% endif %}

        <!-- Search Form -->
        <div class="glass-card rounded-3xl p-6 mb-6 animate-fade-in">
            <div class="flex items-center mb-4">
                <div class="w-10 h-10 bg-gradient-to-r from-blue-600 to-blue-500 rounded-full flex items-center justify-center mr-3">
                    <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                </div>
                <h2 class="text-gray-800 font-bold text-lg">Rechercher un trajet</h2>
            </div>

            <form method="post" class="space-y-4">
                <!-- École Selection -->
                <div class="space-y-2">
                    <label for="ecoleId" class="block text-sm font-medium text-gray-700">
                        École de destination
                    </label>
                    <div class="relative" style="transform: none;">
                        <div class="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none">
                            <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-4m-5 0H9m0 0H5m0 0h2M7 7h10M7 11h4m6 0h4M7 15h10"/>
                            </svg>
                        </div>
                        <select 
                            id="ecoleId" 
                            name="ecoleId" 
                            required
                            class="w-full pl-12 pr-4 py-4 glass-input rounded-2xl text-gray-800 focus:outline-none transition-all duration-300 appearance-none cursor-pointer"
                        >
                            <option value="" class="bg-white text-gray-600">Sélectionnez une école</option>
                            {% for ecole in ecoles %}
                                <option value="{{ ecole.id }}" {% if ecoleId == ecole.id %}selected{% endif %} class="bg-white text-gray-800">
                                    {{ ecole.nom }} - {{ ecole.ville }} ({{ ecole.codePostal }})
                                </option>
                            {% endfor %}
                        </select>
                        <div class="absolute inset-y-0 right-0 pr-4 flex items-center pointer-events-none">
                            <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
                            </svg>
                        </div>
                    </div>
                </div>

                <!-- Date Selection -->
                <div class="space-y-2">
                    <label for="date" class="block text-sm font-medium text-gray-700">
                        Date du trajet
                    </label>
                    <div class="relative" style="transform: none;">
                        <div class="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none">
                            <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                            </svg>
                        </div>
                        <input 
                            type="date" 
                            id="date" 
                            name="date" 
                            value="{{ dateRecherche }}" 
                            required
                            class="w-full pl-12 pr-4 py-4 glass-input rounded-2xl text-gray-800 focus:outline-none transition-all duration-300"
                        >
                    </div>
                </div>

                <!-- Search Button -->
                <button 
                    type="submit" 
                    class="w-full py-4 px-6 btn-search text-white font-semibold rounded-2xl transition-all duration-300 transform hover:scale-[1.02] focus:outline-none focus:ring-2 focus:ring-white/20 shadow-lg hover:shadow-xl relative overflow-hidden group"
                >
                    <span class="relative flex items-center justify-center">
                        <svg class="w-5 h-5 mr-2 group-hover:rotate-12 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                        </svg>
                        Rechercher des trajets
                    </span>
                </button>
            </form>
        </div>

        <!-- Results Section -->
        {% if trajets is not empty %}
            <div class="mb-6 animate-slide-up">
                <div class="flex items-center justify-between mb-4">
                    <h2 class="text-gray-800 font-bold text-lg">
                        {{ trajets|length }} trajet{{ trajets|length > 1 ? 's' : '' }} trouvé{{ trajets|length > 1 ? 's' : '' }}
                    </h2>
                    <div class="text-gray-600 text-sm">
                        {{ dateRecherche|date('d/m/Y') }}
                    </div>
                </div>

                <div class="space-y-4">
                    {% for trajet in trajets %}
                        <div class="glass-card rounded-3xl p-6 animate-scale-in hover:bg-gray-100 transition-all duration-300" style="animation-delay: {{ loop.index0 * 0.1 }}s">
                            <!-- Trip Header -->
                            <div class="flex items-start justify-between mb-4">
                                <div class="flex-1">
                                    <div class="flex items-center space-x-2 mb-2">
                                        <div class="w-8 h-8 bg-blue-500/20 rounded-full flex items-center justify-center">
                                            <svg class="w-4 h-4 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                                            </svg>
                                        </div>
                                        <span class="text-gray-800 font-medium text-sm">Trajet #{{ trajet.id }}</span>
                                        {% if trajet.conducteur is defined and trajet.conducteur %}
                                            <span class="text-gray-600 text-xs">• Par {{ trajet.conducteur.prenom }} {{ trajet.conducteur.nom }}</span>
                                        {% endif %}
                                    </div>
                                    
                                    <!-- Route -->
                                    <div class="space-y-2">
                                        <div class="flex items-start space-x-3">
                                            <div class="w-3 h-3 bg-blue-500 rounded-full mt-1 flex-shrink-0"></div>
                                            <div>
                                                <div class="text-gray-500 text-xs font-medium">DÉPART</div>
                                                <div class="text-gray-800 text-sm">{{ trajet.pointDepart }}</div>
                                            </div>
                                        </div>
                                        
                                        <div class="ml-1.5 w-0.5 h-6 bg-blue-200"></div>
                                        
                                        <div class="flex items-start space-x-3">
                                            <div class="w-3 h-3 bg-blue-500 rounded-full mt-1 flex-shrink-0"></div>
                                            <div>
                                                <div class="text-gray-500 text-xs font-medium">ARRIVÉE</div>
                                                <div class="text-gray-800 text-sm">{% if trajet.ecole is defined and trajet.ecole.nom is defined %}{{ trajet.ecole.nom }} - {{ trajet.ecole.ville }}{% else %}École de destination{% endif %}</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Status Badge -->
                                <div class="ml-4">
                                    {% if trajet.statut == 'disponible' %}
                                        <span class="status-available text-white text-xs font-bold px-3 py-1 rounded-full">
                                            DISPONIBLE
                                        </span>
                                    {% elseif trajet.statut == 'complet' %}
                                        <span class="status-full text-white text-xs font-bold px-3 py-1 rounded-full">
                                            COMPLET
                                        </span>
                                    {% else %}
                                        <span class="status-finished text-white text-xs font-bold px-3 py-1 rounded-full">
                                            {{ trajet.statut|upper }}
                                        </span>
                                    {% endif %}
                                </div>
                            </div>

                            <!-- Trip Details -->
                            <div class="grid grid-cols-2 gap-4 mb-4">
                                <div class="space-y-2">
                                    <div class="flex items-center space-x-2">
                                        <svg class="w-4 h-4 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
                                        </svg>
                                        <span class="text-gray-600 text-sm">{{ trajet.heureDepart }}</span>
                                    </div>
                                    <div class="flex items-center space-x-2">
                                        <svg class="w-4 h-4 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"/>
                                        </svg>
                                        <span class="text-gray-600 text-sm">
                                            {% set placesDisponibles = trajet.nombrePlaces - (trajet.enfantsIds|length) %}
                                            {{ placesDisponibles }} place{{ placesDisponibles > 1 ? 's' : '' }} disponible{{ placesDisponibles > 1 ? 's' : '' }}
                                        </span>
                                    </div>
                                    {% if trajet.dureeMinutes is defined and trajet.dureeMinutes %}
                                    <div class="flex items-center space-x-2">
                                        <svg class="w-4 h-4 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"/>
                                        </svg>
                                        <span class="text-gray-600 text-sm">
                                            {% set hours = (trajet.dureeMinutes // 60) %}
                                            {% set minutes = (trajet.dureeMinutes % 60) %}
                                            {% if hours > 0 %}{{ hours }}h {% endif %}{{ minutes }}min
                                            {% if trajet.distanceKm is defined and trajet.distanceKm %} ({{ trajet.distanceKm }} km){% endif %}
                                        </span>
                                    </div>
                                    {% endif %}
                                    {% if trajet.co2Economise is defined and trajet.co2Economise > 0 %}
                                    <div class="flex items-center space-x-2">
                                        <svg class="w-4 h-4 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"/>
                                        </svg>
                                        <span class="text-gray-600 text-sm">
                                            {{ trajet.co2Economise }}kg CO₂ évité
                                        </span>
                                    </div>
                                    {% endif %}
                                </div>
                                
                                <div class="space-y-2">
                                    <div class="flex items-center space-x-2">
                                        <svg class="w-4 h-4 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"/>
                                        </svg>
                                        <span class="text-blue-600 text-sm font-bold">{{ trajet.pointsCout }} points</span>
                                    </div>
                                    <div class="flex items-center space-x-2">
                                        <svg class="w-4 h-4 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
                                        </svg>
                                        <span class="text-gray-600 text-sm">→ {{ trajet.heureArrivee }}</span>
                                    </div>
                                </div>
                            </div>

                            {% if trajet.description %}
                                <div class="mb-4 p-4 bg-gradient-to-r from-blue-500/10 to-purple-500/10 rounded-xl border border-blue-500/20">
                                    <div class="flex items-center space-x-2 mb-2">
                                        <svg class="w-4 h-4 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"/>
                                        </svg>
                                        <div class="text-blue-400 text-xs font-bold">DESCRIPTION</div>
                                    </div>
                                    <div class="text-gray-700 text-sm leading-relaxed">{{ trajet.description }}</div>
                                </div>
                            {% endif %}

                            {% if trajet.enfantsIds is not empty %}
                                <div class="mb-4 flex items-center space-x-2">
                                    <svg class="w-4 h-4 text-purple-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
                                    </svg>
                                    <span class="text-purple-600 text-sm">{{ trajet.enfantsIds|length }} enfant{{ trajet.enfantsIds|length > 1 ? 's' : '' }} dans la voiture</span>
                                </div>
                            {% endif %}

                            <!-- Actions -->
                            <div class="space-y-3">
                                <!-- Reservation Form -->
                                <form method="post" action="{{ path('reservation_trajet', {'id': trajet.id}) }}" class="space-y-3">
                                    <div class="space-y-2">
                                        <label class="block text-sm font-medium text-gray-700">
                                            Sélectionnez votre enfant
                                        </label>
                                        <div class="relative" style="transform: none;">
                                            <select 
                                                name="enfantId" 
                                                required 
                                                class="w-full px-4 py-3 glass-input rounded-xl text-gray-800 focus:outline-none transition-all duration-300 appearance-none cursor-pointer"
                                            >
                                                <option value="" class="bg-white text-gray-600">Choisir un enfant</option>
                                                {% for enfant in enfants %}
                                                    <option value="{{ enfant.id }}" class="bg-white text-gray-800">{{ enfant.nom }} {{ enfant.prenom }}</option>
                                                {% endfor %}
                                            </select>
                                            <div class="absolute inset-y-0 right-0 pr-4 flex items-center pointer-events-none">
                                                <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
                                                </svg>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="flex space-x-3">
                                        <button 
                                            type="submit" 
                                            class="flex-1 py-3 px-4 btn-reserve text-white font-medium rounded-xl transition-all duration-300 hover:shadow-lg text-sm"
                                            onclick="return confirm('Réserver ce trajet pour {{ trajet.pointsCout }} points ?')"
                                        >
                                            <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                                            </svg>
                                            Réserver
                                        </button>
                                        
                                        <a 
                                            href="{{ path('chat_conversation', {'trajetId': trajet.id, 'destinataireId': trajet.conducteurId}) }}" 
                                            class="flex-1 py-3 px-4 btn-contact text-white font-medium rounded-xl transition-all duration-300 hover:shadow-lg text-sm text-center"
                                        >
                                            <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"/>
                                            </svg>
                                            Contacter
                                        </a>
                                    </div>
                                </form>
                            </div>

                            <!-- Mini Map -->
                            <div class="mt-4">
                                <div id="map-{{ trajet.id }}" class="h-32 w-full rounded-xl glass-card border border-white/10"></div>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>

        {% elseif ecoleId and dateRecherche %}
                                        <div class="glass-card rounded-3xl p-6 text-center animate-fade-in">
                                <div class="w-16 h-16 bg-yellow-500/20 rounded-full flex items-center justify-center mx-auto mb-4">
                                    <svg class="w-8 h-8 text-yellow-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6m2 5.291A7.962 7.962 0 0112 15c-2.239 0-4.3-.613-6.1-1.686"/>
                                    </svg>
                                </div>
                                <h3 class="text-gray-800 font-bold text-lg mb-2">Aucun trajet disponible</h3>
                                <p class="text-gray-600 text-sm mb-4">
                                    Aucun trajet trouvé pour cette école et cette date.
                                </p>
                <a 
                    href="{{ path('trajet_ajouter') }}" 
                    class="inline-flex items-center py-3 px-6 btn-search text-white font-medium rounded-xl transition-all duration-300 hover:shadow-lg text-sm"
                >
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"/>
                    </svg>
                    Créer un trajet
                </a>
            </div>
        {% endif %}

    </main>

    {% include 'partials/_bottom_navigation.html.twig' %}

    <!-- JavaScript -->
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Set minimum date to today
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('date').min = today;

            // Staggered animations (puis neutraliser transform pour éviter les bugs iOS sur <select>)
            const elements = document.querySelectorAll('.animate-scale-in');
            elements.forEach((el, index) => {
                setTimeout(() => {
                    el.style.opacity = '1';
                    // Important: enlever tout transform persistant pour éviter le mauvais positionnement du dropdown natif iOS
                    el.style.transform = 'none';
                }, index * 150);
            });

            // Neutraliser transform/animation après la fin des animations
            document.querySelectorAll('.animate-scale-in, .animate-fade-in, .animate-slide-up').forEach((el) => {
                el.addEventListener('animationend', () => {
                    el.style.animation = 'none';
                    el.style.transform = 'none';
                }, { once: true });
            });

            // Initialize maps for each trip
            {% for trajet in trajets %}
                (async function() {
                    const mapId = 'map-{{ trajet.id }}';
                    const pointDepart = `{{ trajet.pointDepart|e('js') }}`;
                    const pointArrivee = `{% if trajet.ecole is defined and trajet.ecole.nom is defined %}{{ trajet.ecole.nom|e('js') }}, {{ trajet.ecole.ville|e('js') }}{% else %}École de destination{% endif %}`;
                    
                    async function geocode(address) {
                        try {
                            const url = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`;
                            const response = await fetch(url);
                            const data = await response.json();
                            if (data.length > 0) {
                                return [parseFloat(data[0].lat), parseFloat(data[0].lon)];
                            }
                        } catch (error) {
                            console.error('Geocoding error:', error);
                        }
                        return null;
                    }
                    
                    const departCoords = await geocode(pointDepart);
                    const arriveeCoords = await geocode(pointArrivee);
                    
                    if (departCoords && arriveeCoords) {
                        const map = L.map(mapId, {
                            zoomControl: false,
                            attributionControl: false,
                            scrollWheelZoom: false,
                            doubleClickZoom: false,
                            dragging: false
                        }).setView(departCoords, 12);
                        
                        // Light tile layer
                        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                            attribution: '© OpenStreetMap contributors',
                            maxZoom: 19
                        }).addTo(map);
                        
                        // Custom markers
                        const startIcon = L.divIcon({
                            className: 'custom-marker',
                            html: '<div style="background: #3b82f6; width: 12px; height: 12px; border-radius: 50%; border: 2px solid white;"></div>',
                            iconSize: [16, 16],
                            iconAnchor: [8, 8]
                        });
                        
                        const endIcon = L.divIcon({
                            className: 'custom-marker',
                            html: '<div style="background: #2563eb; width: 12px; height: 12px; border-radius: 50%; border: 2px solid white;"></div>',
                            iconSize: [16, 16],
                            iconAnchor: [8, 8]
                        });
                        
                        L.marker(departCoords, { icon: startIcon }).addTo(map);
                        L.marker(arriveeCoords, { icon: endIcon }).addTo(map);
                        
                        const route = L.polyline([departCoords, arriveeCoords], {
                            color: '#60a5fa',
                            weight: 3,
                            opacity: 0.8
                        }).addTo(map);
                        
                        map.fitBounds(route.getBounds(), { padding: [20, 20] });
                    } else {
                        document.getElementById(mapId).innerHTML = '<div class="flex items-center justify-center h-full text-gray-400 text-sm">Carte non disponible</div>';
                    }
                })();
            {% endfor %}
        });

        // Parallax effect for floating orbs
        document.addEventListener('mousemove', (e) => {
            const x = e.clientX / window.innerWidth;
            const y = e.clientY / window.innerHeight;
            
            const orbs = document.querySelector('.floating-orbs');
            if (orbs) {
                orbs.style.transform = `translate(${x * 10}px, ${y * 10}px)`;
            }
        });
    </script>
</body>
</html>